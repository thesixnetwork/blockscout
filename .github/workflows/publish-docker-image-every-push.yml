name: Publish Docker image on every push to master branch

on:
  push:
    branches:
      - kf-arm-build-test2
    paths-ignore:
      - 'CHANGELOG.md'
      - '**/README.md'
      - 'docker-compose/*'
env:
  OTP_VERSION: ${{ vars.OTP_VERSION }}
  ELIXIR_VERSION: ${{ vars.ELIXIR_VERSION }}
  RELEASE_VERSION: ${{ vars.RELEASE_VERSION }}

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    outputs:
      release-version: ${{ steps.output-step.outputs.release-version }}
      short-sha: ${{ steps.output-step.outputs.short-sha }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup repo
        uses: ./.github/actions/setup-repo-and-short-sha
        with:
          docker-username: ${{ secrets.DOCKER_USERNAME }}
          docker-password: ${{ secrets.DOCKER_PASSWORD }}


      - name: Add outputs
        run: |
          echo "::set-output name=release-version::${{ env.NEXT_RELEASE_VERSION }}"
          echo "::set-output name=short-sha::${{ env.SHORT_SHA }}"
        id: output-step

      - name: Set up SSH
        uses: MrSquaare/ssh-setup-action@523473d91581ccbf89565e12b40faba93f2708bd # v1.1.0
        with:
          host: 3.145.97.144
          private-key: ${{ secrets.ARM_RUNNER_KEY }}

      - uses: docker/setup-buildx-action@v3
        id: builder
        with:
          platforms: |
            linux/amd64
          append: |
            - endpoint: ssh://ubuntu@3.145.97.144
              platforms: linux/arm64/v8

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: blockscout/blockscout

      - name: debug docker context
        run: |
          docker context ls
          docker buildx ls

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          builder: ${{ steps.builder.outputs.name }}
          file: ./docker/Dockerfile
          push: true
          platforms: |
            linux/amd64
            linux/arm64/v8
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            CACHE_EXCHANGE_RATES_PERIOD=
            API_V1_READ_METHODS_DISABLED=false
            DISABLE_WEBAPP=false
            API_V1_WRITE_METHODS_DISABLED=false
            CACHE_TOTAL_GAS_USAGE_COUNTER_ENABLED=
            ADMIN_PANEL_ENABLED=false
            DECODE_NOT_A_CONTRACT_CALLS=false
            MIXPANEL_URL=
            MIXPANEL_TOKEN=
            AMPLITUDE_URL=
            AMPLITUDE_API_KEY=
            CACHE_ADDRESS_WITH_BALANCES_UPDATE_INTERVAL=
            BLOCKSCOUT_VERSION=v${{ env.RELEASE_VERSION }}-beta.+commit.${{ env.SHORT_SHA }}
            RELEASE_VERSION=${{ env.RELEASE_VERSION }}
