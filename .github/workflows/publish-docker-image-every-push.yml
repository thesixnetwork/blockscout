name: Publish Docker image on every push to master branch

on:
  push:
    branches:
      - kf-arm-build-test
    paths-ignore:
      - 'CHANGELOG.md'
      - '**/README.md'
      - 'docker-compose/*'
env:
  OTP_VERSION: '25.3.2.8'
  ELIXIR_VERSION: '1.14.5'
  RELEASE_VERSION: 6.1.0


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/arm64/v8, linux/amd64]
    outputs:
      digest_amd64: ${{ steps.digest_amd64.outputs.digest }}
      digest_arm64: ${{ steps.digest_arm64.outputs.digest }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: blockscout/blockscout
          
      - name: Set up SSH
        if: matrix.platform == 'linux/arm64/v8'
        uses: MrSquaare/ssh-setup-action@523473d91581ccbf89565e12b40faba93f2708bd # v1.1.0
        with:
          host: 3.145.97.144
          private-key: ${{ secrets.ARM_RUNNER_KEY }}

      - uses: docker/setup-buildx-action@v3
        if: matrix.platform == 'linux/amd64'
        name: Set up local builder
        id: builder_local
        
      - uses: docker/setup-buildx-action@v3
        if: matrix.platform == 'linux/arm64/v8'
        name: Set up ARM builder
        id: builder_remote_arm
        with:
          driver: remote
          endpoint: ssh://ubuntu@3.145.97.144
          platforms: ${{ matrix.platform }}

      - name: debug docker context
        run: |
          docker context ls        
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build ${{ matrix.platform }} by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          builder: ${{ steps.builder_local.outputs.name || steps.builder_remote_arm.outputs.name }}
          file: ./docker/Dockerfile
          cache-from: type=registry,ref=blockscout/blockscout:buildcache
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=blockscout/blockscout,push-by-digest=true,name-canonical=true,push=true
          build-args: |
            CACHE_EXCHANGE_RATES_PERIOD=
            API_V1_READ_METHODS_DISABLED=false
            DISABLE_WEBAPP=false
            API_V1_WRITE_METHODS_DISABLED=false
            CACHE_TOTAL_GAS_USAGE_COUNTER_ENABLED=false
            ADMIN_PANEL_ENABLED=false
            CACHE_ADDRESS_WITH_BALANCES_UPDATE_INTERVAL=
            BLOCKSCOUT_VERSION=kf-arm-build-test
            RELEASE_VERSION=${{ env.RELEASE_VERSION }}

      - name: Set digest
        if: matrix.platform == 'linux/amd64'
        id: digest_amd64
        run: echo "digest=${{ steps.build.outputs.digest }}" >> "$GITHUB_OUTPUT"
      - name: Set digest
        if: matrix.platform == 'linux/arm64/v8'
        id: digest_arm64
        run: echo "digest=${{ steps.build.outputs.digest }}" >> "$GITHUB_OUTPUT"

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: blockscout/blockscout
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Create manifest list and push
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            ${{ needs.build.outputs.digest_amd64 }} \
            ${{ needs.build.outputs.digest_arm64 }}
      -
        name: Inspect image
        run: |
          docker buildx imagetools inspect blockscout/blockscout:${{ steps.meta.outputs.version }}     
